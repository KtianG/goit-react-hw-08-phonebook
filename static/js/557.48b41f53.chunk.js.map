{"version":3,"file":"static/js/557.48b41f53.chunk.js","mappings":"wNAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAEnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,OAAOC,KAAjB,ECLjC,EAA2B,2BCA3B,EAA8B,iCAA9B,EAAwE,4B,SCM3DC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAajB,OACE,kBAAMC,UAAWC,EAAiBC,SAAU,SAAAC,GAAC,OAZ1B,SAAAA,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAITC,EAAc,CAAEC,KAHTH,EAAKI,SAASD,KAAKE,MAGEC,OAFtB,UAAMN,EAAKI,SAASE,OAAOD,QAGvCZ,GAASc,EAAAA,EAAAA,IAAWL,IACpBF,EAAKQ,OACN,CAGkDC,CAAaX,EAAjB,EAA7C,WACE,kCACA,kBACEY,KAAK,OACLP,KAAK,OACLQ,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAGV,oCACA,kBACEH,KAAK,MACLP,KAAK,SACLQ,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAGV,mBAAQlB,UAAWC,EAAYc,KAAK,SAApC,2BAKL,E,SC7CD,EAAyB,uBAAzB,EAAwD,sBAAxD,EAAyF,yBCK5EI,EAAS,WACpB,IAAMrB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,qCACA,kBACED,UAAWC,EACXc,KAAK,OACLP,KAAK,SACLY,SAAU,SAAAjB,GAAC,OAXG,SAAAA,GAClBL,GAASuB,EAAAA,EAAAA,GAAelB,EAAEmB,OAAOZ,OAClC,CASoBa,CAAYpB,EAAhB,MAIlB,ECvBD,EAA8B,iCCA9B,EAA8B,wCAA9B,EAAqF,yCCOxEqB,EAAqB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIjB,EAAmB,EAAnBA,KAAMG,EAAa,EAAbA,OACvCb,GAAWC,EAAAA,EAAAA,MAMjB,OACE,2BACE,iBAAKC,UAAWC,EAAhB,WACE,4BAAOO,EAAP,YADF,KAC8B,gCAAQG,SAEtC,mBAAQX,UAAWC,EAAkByB,QAAS,kBAT5B,SAAAD,GACpB3B,GAAS6B,EAAAA,EAAAA,IAAcF,GACxB,CAOuDG,CAAcH,EAApB,EAA9C,sBAKL,ECTYI,EAAc,WACzB,IAEMC,EAVoB,SAAC1C,EAAUO,GAIrC,OAHyBP,EAASO,QAAO,qBAAGa,KACrCuB,cAAcC,SAASrC,EAAOoC,cADI,GAI1C,CAK0BE,EAFRC,EAAAA,EAAAA,IAAYhD,IACdgD,EAAAA,EAAAA,IAAYxC,IAO3B,OACE,eAAIM,UAAWC,EAAf,SACG6B,EAAiBK,KANI,SAAC,GAA0B,IAAxBV,EAAuB,EAAvBA,GAAIjB,EAAmB,EAAnBA,KAAMG,EAAa,EAAbA,OACrC,OAAO,SAACa,EAAD,CAA6BC,GAAIA,EAAIjB,KAAMA,EAAMG,OAAQA,GAAhCc,EACjC,KAOF,ECjBc,SAASW,IACtB,IAAMtC,GAAWC,EAAAA,EAAAA,MACXR,GAAY2C,EAAAA,EAAAA,IAAY5C,GACxBG,GAAQyC,EAAAA,EAAAA,IAAY1C,GAM1B,OAJA6C,EAAAA,EAAAA,YAAU,WACRvC,GAASwC,EAAAA,EAAAA,MACV,GAAE,CAACxC,KAGF,iBAAKE,UAAWC,EAAhB,WACE,uCACA,SAACJ,EAAD,KACA,sCACA,SAACsB,EAAD,IACC5B,IAAcE,IAAS,mDACxB,SAACoC,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm .jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactListElement/ContactListElement.module.css?1371","components/ContactListElement/ContactListElement.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.query;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contacts_contacts__gVK0J\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"button\":\"ContactForm_button__eSwX9\"};","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = `${form.elements.number.value}`;\n\n    const new_contact = { name: name, number: number };\n    dispatch(addContact(new_contact));\n    form.reset();\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={e => handleSubmit(e)}>\n      <h3>Name</h3>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <h3>Number</h3>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <button className={css.button} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"title\":\"Filter_title__pSkfx\",\"inputBar\":\"Filter_inputBar__l4law\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setQueryFilter } from 'redux/contacts/filterSlice';\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleInput = e => {\n    dispatch(setQueryFilter(e.target.value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <p className={css.title}>Find Contacts by name:</p>\n      <input\n        className={css.inputBar}\n        type=\"text\"\n        name=\"filter\"\n        onChange={e => handleInput(e)}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactList\":\"ContactList_ContactList__2mXfy\"};","// extracted by mini-css-extract-plugin\nexport default {\"listElement\":\"ContactListElement_listElement__k2oZO\",\"deleteButton\":\"ContactListElement_deleteButton__Z6q3o\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport css from './ContactListElement.module.css';\n\nexport const ContactListElement = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const removeContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li>\n      <div className={css.listElement}>\n        <span>{name}: &nbsp;</span> <span> {number}</span>\n      </div>\n      <button className={css.deleteButton} onClick={() => removeContact(id)}>\n        delete\n      </button>\n    </li>\n  );\n};\n\nContactListElement.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n\nimport css from './ContactList.module.css';\n\nimport { ContactListElement } from 'components/ContactListElement/ContactListElement';\n\nconst getFilteredContacts = (contacts, filter) => {\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return filteredContacts;\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const filteredContacts = getFilteredContacts(contacts, filter);\n\n  const renderContactList = ({ id, name, number }) => {\n    return <ContactListElement key={id} id={id} name={name} number={number} />;\n  };\n\n  return (\n    <ul className={css.ContactList}>\n      {filteredContacts.map(renderContactList)}\n    </ul>\n  );\n};\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nimport css from './Contacts.module.css';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm ';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.contacts}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","query","ContactForm","dispatch","useDispatch","className","css","onSubmit","e","preventDefault","form","currentTarget","new_contact","name","elements","value","number","addContact","reset","handleSubmit","type","pattern","title","required","Filter","onChange","setQueryFilter","target","handleInput","ContactListElement","id","onClick","deleteContact","removeContact","ContactList","filteredContacts","toLowerCase","includes","getFilteredContacts","useSelector","map","Contacts","useEffect","fetchContacts"],"sourceRoot":""}